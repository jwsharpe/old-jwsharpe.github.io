{"version":3,"sources":["components/Header.tsx","components/Book.tsx","containers/BookContainer.tsx","components/ShowBook.tsx","components/SearchBar.tsx","components/RecTitle.tsx","App.tsx","helper/importedHooks.js","serviceWorker.ts","index.tsx","About.tsx"],"names":["Header","className","href","Book","props","book","img","authors","id","titles","coverExists","length","slice","onClick","setShowBook","showBook","alt","src","BookContainer","books","map","index","key","ShowBook","description","fetchRecsByTitle","SearchBar","TextField","label","variant","value","query","onChange","e","setQuery","target","fullWidth","RecTitle","recTitle","clearRecs","IP","App","useState","setBooks","setRecTitle","pageNumber","setPageNumber","isAppLoading","setIsAppLoading","isPageLoading","setIsPageLoading","debouncedQuery","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","localStorage","getItem","console","log","alert","setItem","_fetchFirstPage","_fetchSearchQuery","_clearSearch","a","async","mainBody","content","method","headers","Accept","body","JSON","stringify","fetch","res","json","_fetchPage","page","newBooks","text","findIndex","onScroll","event","persist","scrollTop","scrollHeight","nextPage","_fetchNextPage","Boolean","window","location","hostname","match","theme","createMuiTheme","palette","primary","purple","secondary","main","ReactDOM","render","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.db335c4b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../css/Header.scss\";\n\nconst Header: React.FC = () => {\n  return (\n    <header>\n      <div>\n        <h3>Your Next Page Turner</h3>\n      </div>\n      <div className=\"header-actions\">\n        <a href=\"/your-next-page-turner/about\">about</a>\n        <a href=\"/your-next-page-turner/\">home</a>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { ReactElement } from \"react\";\nimport { BookData } from \"../typescript/types\";\n\ninterface Props {\n  book: BookData;\n  showBook: number;\n  setShowBook: any;\n}\n\nexport default function Book(props: Props): ReactElement {\n  const { img, authors, id } = props.book;\n  let titles = props.book.titles;\n  const coverExists = !!img;\n  if (titles.length > 70) {\n    titles = titles.slice(0, 70);\n    titles += \"...\";\n  }\n  const _pressHandler = () => {\n    props.setShowBook(id);\n  };\n  return (\n    <li\n      onClick={_pressHandler}\n      className={id === props.showBook ? \"book book-active\" : \"book\"}\n    >\n      <div className=\"img-container\">\n        {coverExists ? (\n          <img alt=\"\" src={img} />\n        ) : (\n          <div className=\"missing-book\">missing :(</div>\n        )}\n      </div>\n      <div className=\"title\"> {titles}</div>\n      <div className=\"author\"> {authors}</div>\n    </li>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport \"../css/Book.scss\";\nimport Book from \"../components/Book\";\nimport { BookData } from \"../typescript/types\";\n\ninterface Props {\n  books: BookData[];\n  showBook: number;\n  setShowBook: any;\n}\n\nexport default function BookContainer(props: Props): ReactElement {\n  const renderBooks = () => {\n    const { books } = props;\n\n    return books.map((book, index) => {\n      return (\n        <Book\n          setShowBook={props.setShowBook}\n          showBook={props.showBook}\n          key={index}\n          book={book}\n        />\n      );\n    });\n  };\n\n  return <ul className=\"book-container\">{renderBooks()}</ul>;\n}\n","import React, { ReactElement } from \"react\";\nimport \"../css/Aside.scss\";\nimport { BookData } from \"../typescript/types\";\ninterface Props {\n  book: BookData;\n  fetchRecsByTitle: any;\n}\n\nexport default function ShowBook(props: Props): ReactElement {\n  return (\n    <div>\n      {props.book ? (\n        <aside>\n          <div className=\"top\">\n            <div className=\"title\">{props.book.titles}</div>\n            <div className=\"border\"></div>\n            <div className=\"author\">{props.book.authors}</div>\n            <div className=\"description\">{props.book.description}</div>\n          </div>\n\n          <button\n            onClick={() => {\n              props.fetchRecsByTitle(props.book);\n            }}\n            className=\"rec-button\"\n          >\n            Get Recommendations!\n          </button>\n        </aside>\n      ) : (\n        <aside>\n          <div className=\"top\">\n            <div className=\"title\">Please Select a Book!</div>\n          </div>\n        </aside>\n      )}\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport { TextField } from \"@material-ui/core\";\n\ninterface Props {\n  query: string;\n  setQuery: any;\n}\n\nexport default function SearchBar(props: Props): ReactElement {\n  const _changeHandler = (e: any) => props.setQuery(e.target.value);\n  return (\n    <div className=\"search\">\n      <div className=\"container\">\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Search your favorites!\"\n          variant=\"outlined\"\n          value={props.query}\n          onChange={_changeHandler}\n          fullWidth\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport \"../css/RecTitle.scss\";\n\ninterface Props {\n  recTitle: string;\n  clearRecs: any;\n}\n\nexport default function RecTitle(props: Props): ReactElement {\n  return (\n    <div className=\"search\">\n      <div className=\"container rec-container\">\n        <div className=\"rec-desc\">Books like </div>\n        <div className=\"rec-title\">{props.recTitle}</div>\n        <div className=\"clear-rec-button\" onClick={props.clearRecs}>\n          Clear Rec\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./css/App.scss\";\nimport Header from \"./components/Header\";\nimport BookContainer from \"./containers/BookContainer\";\nimport { BookData } from \"./typescript/types\";\nimport ShowBook from \"./components/ShowBook\";\n\nimport { useDebounce } from \"./helper/importedHooks\";\nimport SearchBar from \"./components/SearchBar\";\nimport RecTitle from \"./components/RecTitle\";\n\nconst IP = \"https://your-next-page-turner-backend.herokuapp.com\";\n\nconst App: React.FC = () => {\n  const [books, setBooks] = useState<BookData[]>([]);\n  const [recTitle, setRecTitle] = useState<string>(\"\");\n  const [showBook, setShowBook] = useState<number>(-1);\n  const [pageNumber, setPageNumber] = useState<number>(0);\n  const [isAppLoading, setIsAppLoading] = useState<boolean>(true);\n  const [isPageLoading, setIsPageLoading] = useState<boolean>(true);\n\n  const [query, setQuery] = useState<string>(\"\");\n  const debouncedQuery = useDebounce(query, 200);\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"first\")) {\n      console.log(localStorage.getItem(\"first\"));\n      alert(\n        \"Hi! This app is still in its infancy. There are only 200 books in the production database, so recommendations will be skewed and books you expect to be here will not be! Thanks. -James\"\n      );\n      localStorage.setItem(\"first\", \"visited\");\n    }\n\n    if (isAppLoading) {\n      setIsAppLoading(false);\n      _fetchFirstPage();\n    }\n\n    if (query.length >= 2) {\n      _fetchSearchQuery(debouncedQuery);\n    }\n\n    if (query.length === 0) {\n      _clearSearch();\n    }\n  }, [debouncedQuery.length]);\n\n  const _fetchRecsByTitle = async (book: BookData) => {\n    setPageNumber(-1);\n    setRecTitle(book.titles);\n\n    const mainBody = {\n      text: book.titles\n    };\n    const content = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(mainBody)\n    };\n\n    const res = await fetch(IP + \"/books\", content);\n    const books = await res.json();\n\n    setBooks([book, ...books]);\n  };\n\n  const _fetchSearchQuery = async (query: string) => {\n    const mainBody = {\n      query: query\n    };\n    const content = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(mainBody)\n    };\n    const res = await fetch(IP + \"/query\", content);\n    const books = await res.json();\n    setBooks(books);\n  };\n\n  const _clearRecs = () => {\n    _fetchFirstPage();\n  };\n\n  const _clearSearch = () => {\n    _fetchFirstPage();\n  };\n\n  const _fetchFirstPage = () => {\n    setIsPageLoading(true);\n    setBooks([]);\n    setPageNumber(0);\n    _fetchPage(0);\n  };\n\n  const _fetchNextPage = () => {\n    setIsPageLoading(true);\n    const nextPage = pageNumber + 1;\n    setPageNumber(nextPage);\n    _fetchPage(nextPage);\n  };\n\n  const _fetchPage = async (page: number) => {\n    const res = await fetch(IP + \"/books/\" + page);\n    const newBooks = await res.json();\n    setBooks([...books, ...newBooks]);\n    if (setIsPageLoading) setTimeout(() => setIsPageLoading(false), 500);\n  };\n\n  const _handleScroll = (event: any) => {\n    event.persist();\n    const { scrollTop, scrollHeight } = event.target;\n    if (\n      scrollHeight - scrollTop < scrollHeight / 2 &&\n      !isPageLoading &&\n      pageNumber !== -1 &&\n      !query.length\n    ) {\n      _fetchNextPage();\n    }\n  };\n\n  const findShowBookIndex = (id: number) => {\n    return books.findIndex(book => book.id === id);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <div className=\"content-grid\">\n        <ShowBook\n          fetchRecsByTitle={_fetchRecsByTitle}\n          book={books[findShowBookIndex(showBook)]}\n        />\n\n        <div onScroll={_handleScroll} className=\"content-container\">\n          {pageNumber !== -1 ? (\n            <SearchBar query={query} setQuery={setQuery} />\n          ) : (\n            <RecTitle recTitle={recTitle} clearRecs={_clearRecs} />\n          )}\n\n          <BookContainer\n            books={books}\n            showBook={showBook}\n            setShowBook={setShowBook}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { useState, useEffect } from \"react\";\nexport function useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n\n  return debouncedValue;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { ReactElement } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport About from \"./About\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: purple,\n    secondary: {\n      main: \"#f44336\"\n    }\n  }\n});\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <Router>\n      <Switch>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n\n        <Route path=\"/\">\n          <App />\n        </Route>\n      </Switch>\n    </Router>\n  </MuiThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { ReactElement } from \"react\";\nimport Header from \"./components/Header\";\nimport \"./css/About.scss\";\n\ninterface Props {}\n\nexport default function About({}: Props): ReactElement {\n  return (\n    <>\n      <Header />\n      <div className=\"about\">\n        <h2>About</h2>\n        <p>\n          Your Next Page Turner is an application that allows you to find\n          recommendations based on a selected book.\n        </p>\n        <p> This project was created by James Sharpe and Rebecca Rosen.</p>\n\n        <p>\n          Currently this app is in its infancy. The current number of books in\n          the production database is 200, so finding books and getting book\n          recommendations will be skewed. Our next goal is minimizing the\n          recommendation system matrix to host more books.\n        </p>\n        <p>\n          Rebecca did the data collection, data scraping and reccomendation\n          system. Find more about the project backend{\" \"}\n          <a href=\"https://github.com/rebecca-hh-rosen/your_next_page_turner_backend\">\n            here.\n          </a>\n        </p>\n        <p>\n          James did the frontend engineering and deployed it. Find more about\n          the project's frontend{\" \"}\n          <a href=\"https://github.com/jwsharpe/your_next_page_turner_frontend\">\n            here.\n          </a>\n        </p>\n        <a href=\"https://github.com/jwsharpe\">View James on Github</a>\n        <a href=\"https://github.com/rebecca-hh-rosen\">View Rebecca on Github</a>\n        <p></p>\n        <p>Thank you for visiting :)</p>\n      </div>\n    </>\n  );\n}\n"],"sourceRoot":""}